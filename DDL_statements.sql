CREATE SCHEMA IF NOT EXISTS BOOK_STORE; 
#
USE BOOK_STORE; 
#
CREATE TABLE IF NOT EXISTS BOOK_STORE.PUBLISHER ( 
NAME VARCHAR(45) NOT NULL, 
ADDRESS VARCHAR(45) NOT NULL, 
PHONE VARCHAR(15) NULL, 
PRIMARY KEY (NAME, ADDRESS)); 
#
CREATE TABLE IF NOT EXISTS BOOK_STORE.AUTHOR ( 
NAME VARCHAR(45) NOT NULL, 
ADDRESS VARCHAR(45) NULL, 
PHONE VARCHAR(15) NULL, 
PRIMARY KEY (NAME)); 
#
CREATE TABLE IF NOT EXISTS BOOK_STORE.BOOK ( 
ISBN INT UNSIGNED NOT NULL, 
TITLE VARCHAR(45) NOT NULL, 
CATEGORY VARCHAR(45) NOT NULL, 
PRICE INT UNSIGNED NOT NULL, 
PUBLISHER_NAME VARCHAR(45) NOT NULL, 
PUBLICATION_YEAR INT UNSIGNED NOT NULL, 
AMOUNT_IN_STOCK INT UNSIGNED NOT NULL, 
THRESHOLD INT UNSIGNED NOT NULL, 
PRIMARY KEY (ISBN), 
CONSTRAINT  BOOK_PUBLISHER_FK FOREIGN KEY (PUBLISHER_NAME) REFERENCES 
BOOK_STORE.PUBLISHER (NAME) ON DELETE RESTRICT ON UPDATE CASCADE ); 
#
CREATE TABLE IF NOT EXISTS BOOK_STORE.AUTHORED_BY ( 
ISBN INT UNSIGNED NOT NULL, 
NAME VARCHAR(45) NOT NULL, 
PRIMARY KEY (ISBN, NAME), 
CONSTRAINT  BOOK_AUTHORED_BY_FK FOREIGN KEY (ISBN) REFERENCES 
BOOK_STORE.BOOK (ISBN) ON DELETE CASCADE ON UPDATE CASCADE, 
CONSTRAINT  AUTHOR_AUTHORED_BY_FK FOREIGN KEY (NAME) REFERENCES 
BOOK_STORE.AUTHOR (NAME) ON DELETE RESTRICT ON UPDATE CASCADE ); 
#
CREATE TABLE IF NOT EXISTS BOOK_STORE.ORDERS ( 
ID INT UNSIGNED NOT NULL AUTO_INCREMENT, 
ISBN INT UNSIGNED NOT NULL, 
QUANTITY INT UNSIGNED NOT NULL, 
ORDER_DATE DATE NOT NULL, 
PRIMARY KEY (ID), 
CONSTRAINT  BOOK_ORDER_FK FOREIGN KEY (ISBN) REFERENCES 
BOOK_STORE.BOOK (ISBN) ON DELETE RESTRICT ON UPDATE CASCADE ); 
#
CREATE TRIGGER BOOK_BEFORE_INSERT 
BEFORE INSERT ON BOOK 
FOR EACH ROW 
BEGIN 
IF NEW.CATEGORY NOT IN ('Science','Art','Religion','History','Geography') 
THEN 
SIGNAL SQLSTATE '02000' SET MESSAGE_TEXT = 'ERROR: INCOMPATIBLE DOMAIN'; 
END IF; 
END;
#
CREATE TRIGGER BOOK_AFTER_INSERT 
AFTER INSERT ON BOOK 
FOR EACH ROW 
BEGIN 
IF NEW.AMOUNT_IN_STOCK < NEW.THRESHOLD 
THEN 
	INSERT INTO ORDERS (ISBN, QUANTITY, ORDER_DATE) VALUES(NEW.ISBN, 200, curdate()); 
END IF; 
END; 
#
CREATE TRIGGER BOOK_BEFORE_UPDATE 
BEFORE UPDATE ON BOOK 
FOR EACH ROW 
BEGIN 
IF NEW.CATEGORY NOT IN ('Science','Art','Religion','History','Geography') 
THEN 
SIGNAL SQLSTATE '02000' SET MESSAGE_TEXT = 'ERROR: INCOMPATIBLE DOMAIN'; 
END IF; 
IF NEW.AMOUNT_IN_STOCK < 0 
THEN 
SIGNAL SQLSTATE '02000' SET MESSAGE_TEXT = 'ERROR: AMOUNT IN STOCK MUST BE POSITIVE'; 
END IF; 
END; 
#
CREATE TRIGGER BOOK_AFTER_UPDATE 
AFTER UPDATE ON BOOK 
FOR EACH ROW 
BEGIN 
IF NEW.AMOUNT_IN_STOCK < NEW.THRESHOLD THEN 
	INSERT INTO ORDERS (ISBN, QUANTITY, ORDER_DATE) VALUES(NEW.ISBN, 200, curdate()); 
END IF; 
END; 
#
CREATE TRIGGER ORDERS_BEFORE_DELETION 
BEFORE DELETE ON ORDERS 
FOR EACH ROW 
BEGIN 
    UPDATE BOOK SET BOOK.AMOUNT_IN_STOCK = BOOK.AMOUNT_IN_STOCK + OLD.QUANTITY 
    WHERE BOOK.ISBN = OLD.ISBN; 
END; 
